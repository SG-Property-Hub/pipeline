version: '3'

services:

  dagster_postgresql:
    image: postgres:16.1
    container_name: dagster_postgresql
    environment:
      POSTGRES_USER: ${DAGSTER_POSTGRES_USER}
      POSTGRES_PASSWORD: ${DAGSTER_POSTGRES_PASSWORD}
      POSTGRES_DB: ${DAGSTER_POSTGRES_DB}
    networks:
      - dagster_network

  dagster_webserver:
    build: 
      context: .
      dockerfile: dockerfile
    entrypoint:
      - dagster-webserver
      - -h
      - "0.0.0.0"
      - -p
      - "3000"
      - -w
      - workspace.yaml
    container_name: dagster_webserver
    expose:
      - "3000"
    ports:
      - "3000:3000"
    environment:
      DAGSTER_POSTGRES_USER: ${DAGSTER_POSTGRES_USER}
      DAGSTER_POSTGRES_PASSWORD: ${DAGSTER_POSTGRES_PASSWORD}
      DAGSTER_POSTGRES_DB: ${DAGSTER_POSTGRES_DB}
    volumes: # Make docker client accessible, so we can terminate containers from the webserver
      - /var/run/docker.sock:/var/run/docker.sock
      - ./etl:/opt/dagster/dagster_home/etl
      - ./workspace.yaml:/opt/dagster/dagster_home/workspace.yaml
      - ./dagster.yaml:/opt/dagster/dagster_home/dagster.yaml
    networks:
      - dagster_network

  dagster-daemon:
    build: 
      context: .
      dockerfile: dockerfile
    entrypoint:
      - dagster-daemon
      - run
    environment:
      DAGSTER_POSTGRES_USER: ${DAGSTER_POSTGRES_USER}
      DAGSTER_POSTGRES_PASSWORD: ${DAGSTER_POSTGRES_PASSWORD}
      DAGSTER_POSTGRES_DB: ${DAGSTER_POSTGRES_DB}
    volumes: # Make docker client accessible, so we can terminate containers from the webserver
      - /var/run/docker.sock:/var/run/docker.sock
      - ./etl:/opt/dagster/dagster_home/etl
      - ./workspace.yaml:/opt/dagster/dagster_home/workspace.yaml
      - ./dagster.yaml:/opt/dagster/dagster_home/dagster.yaml
    networks:
      - dagster_network

  spark-master:
    image: bitnami/spark:latest
    command: bin/spark-class org.apache.spark.deploy.master.Master
    ports:
      - '8080:8080'
      - '7077:7077'
    volumes:
      - ./spark:/opt/bitnami/spark/code
    networks:
      - dagster_network

  spark-worker:
    image: bitnami/spark:latest
    command: bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
    depends_on:
      - spark-master
    environment:
      - SPARK_MODE=worker
      - SPARK_WORKER_CORES=2
      - SPARK_WORKER_MEMORY=2g
      - SPARK_MASTER_URL=spark://spark-master:7077
    volumes:
      - ./spark:/opt/bitnami/spark/code
    networks:
      - dagster_network 

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./storage:/data
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server --console-address ":9001" /data

networks:
  dagster_network: